[project]
name = "ktx-macro-v2"
version = "0.1.0"
description = "Image-based macro automation tool with GUI"
authors = [{name = "KTX Macro Team", email = "dev@example.com"}]
readme = "README.md"
requires-python = ">=3.9,<3.12"
license = {text = "MIT"}
keywords = ["automation", "macro", "image-matching", "gui"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Desktop Environment",
    "Topic :: Software Development :: Libraries :: Python Modules",
]

dependencies = [
    "pyqt6>=6.6.0",
    "opencv-python>=4.8.0",
    "PyAutoGUI>=0.9.54",
    "Pillow>=10.0.0",
    "numpy>=1.24.0",
    "requests>=2.31.0",
    "python-telegram-bot>=20.7",
    "pydantic>=2.5.0",
    "pyyaml>=6.0.1",
    "screeninfo>=0.8",
    "psutil>=7.0.0",
    "aiohttp>=3.12.15",
    "pytesseract>=0.3.13",
    "pynput>=1.7.6",
    "pyinstaller>=6.15.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.5.0",
    "pre-commit>=3.4.0",
]
build = [
    "pyinstaller>=6.0.0",
    "cx-freeze>=6.15.0",
]

[project.gui-scripts]
macro = "macro.main:main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src/macro"]

[tool.hatch.build.targets.sdist]
include = [
    "/src",
    "/assets",
    "/README.md",
    "/LICENSE",
]

[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["macro"]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "cv2",
    "pyautogui",
    "screeninfo",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short --strict-markers"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]
